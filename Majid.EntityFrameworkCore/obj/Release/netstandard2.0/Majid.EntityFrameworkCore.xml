<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Majid.EntityFrameworkCore</name>
    </assembly>
    <members>
        <member name="T:Majid.EntityFrameworkCore.Configuration.MajidEfCoreConfigurationExtensions">
            <summary>
            Defines extension methods to <see cref="T:Majid.Configuration.Startup.IModuleConfigurations"/> to allow to configure MAJID EntityFramework Core module.
            </summary>
        </member>
        <member name="M:Majid.EntityFrameworkCore.Configuration.MajidEfCoreConfigurationExtensions.MajidEfCore(Majid.Configuration.Startup.IModuleConfigurations)">
            <summary>
            Used to configure MAJID EntityFramework Core module.
            </summary>
        </member>
        <member name="T:Majid.EntityFrameworkCore.Extensions.QueryableExtensions">
            <summary>
            Extension methods for <see cref="T:System.Linq.IQueryable"/> and <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
        </member>
        <member name="M:Majid.EntityFrameworkCore.Extensions.QueryableExtensions.IncludeIf``1(System.Linq.IQueryable{``0},System.Boolean,System.String)">
            <summary>
            Specifies the related objects to include in the query results.
            </summary>
            <param name="source">The source <see cref="T:System.Linq.IQueryable`1"/> on which to call Include.</param>
            <param name="condition">A boolean value to determine to include <paramref name="path"/> or not.</param>
            <param name="path">The dot-separated list of related objects to return in the query results.</param>
        </member>
        <member name="M:Majid.EntityFrameworkCore.Extensions.QueryableExtensions.IncludeIf``2(System.Linq.IQueryable{``0},System.Boolean,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Specifies the related objects to include in the query results.
            </summary>
            <param name="source">The source <see cref="T:System.Linq.IQueryable`1"/> on which to call Include.</param>
            <param name="condition">A boolean value to determine to include <paramref name="path"/> or not.</param>
            <param name="path">The type of navigation property being included.</param>
        </member>
        <member name="M:Majid.EntityFrameworkCore.Extensions.QueryableExtensions.IncludeIf``1(System.Linq.IQueryable{``0},System.Boolean,System.Func{System.Linq.IQueryable{``0},Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``0,System.Object}})">
            <summary>
            Specifies the related objects to include in the query results.
            </summary>
            <param name="source">The source <see cref="T:System.Linq.IQueryable`1"/> on which to call Include.</param>
            <param name="condition">A boolean value to determine to include <paramref name="include"/> or not.</param>
            <param name="include">A function to include one or more navigation properties using Include/ThenInclude chaining operators.</param>
        </member>
        <member name="T:Majid.EntityFrameworkCore.MajidDbContext">
            <summary>
            Base class for all DbContext classes in the application.
            </summary>
        </member>
        <member name="P:Majid.EntityFrameworkCore.MajidDbContext.MajidSession">
            <summary>
            Used to get current session values.
            </summary>
        </member>
        <member name="P:Majid.EntityFrameworkCore.MajidDbContext.EntityChangeEventHelper">
            <summary>
            Used to trigger entity change events.
            </summary>
        </member>
        <member name="P:Majid.EntityFrameworkCore.MajidDbContext.Logger">
            <summary>
            Reference to the logger.
            </summary>
        </member>
        <member name="P:Majid.EntityFrameworkCore.MajidDbContext.EventBus">
            <summary>
            Reference to the event bus.
            </summary>
        </member>
        <member name="P:Majid.EntityFrameworkCore.MajidDbContext.GuidGenerator">
            <summary>
            Reference to GUID generator.
            </summary>
        </member>
        <member name="P:Majid.EntityFrameworkCore.MajidDbContext.CurrentUnitOfWorkProvider">
            <summary>
            Reference to the current UOW provider.
            </summary>
        </member>
        <member name="P:Majid.EntityFrameworkCore.MajidDbContext.MultiTenancyConfig">
            <summary>
            Reference to multi tenancy configuration.
            </summary>
        </member>
        <member name="P:Majid.EntityFrameworkCore.MajidDbContext.SuppressAutoSetTenantId">
            <summary>
            Can be used to suppress automatically setting TenantId on SaveChanges.
            Default: false.
            </summary>
        </member>
        <member name="M:Majid.EntityFrameworkCore.MajidDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Majid.EntityFrameworkCore.MajidEntityFrameworkCoreModule">
            <summary>
            This module is used to implement "Data Access Layer" in EntityFramework.
            </summary>
        </member>
        <member name="T:Majid.EntityFrameworkCore.Repositories.EfCoreRepositoryBase`3">
            <summary>
            Implements IRepository for Entity Framework.
            </summary>
            <typeparam name="TDbContext">DbContext which contains <typeparamref name="TEntity"/>.</typeparam>
            <typeparam name="TEntity">Type of the Entity for this repository</typeparam>
            <typeparam name="TPrimaryKey">Primary key of the entity</typeparam>
        </member>
        <member name="P:Majid.EntityFrameworkCore.Repositories.EfCoreRepositoryBase`3.Context">
            <summary>
            Gets EF DbContext object.
            </summary>
        </member>
        <member name="P:Majid.EntityFrameworkCore.Repositories.EfCoreRepositoryBase`3.Table">
            <summary>
            Gets DbSet for given entity.
            </summary>
        </member>
        <member name="M:Majid.EntityFrameworkCore.Repositories.EfCoreRepositoryBase`3.#ctor(Majid.EntityFrameworkCore.IDbContextProvider{`0})">
            <summary>
            Constructor
            </summary>
            <param name="dbContextProvider"></param>
        </member>
        <member name="T:Majid.EntityFrameworkCore.Uow.EfCoreUnitOfWork">
            <summary>
            Implements Unit of work for Entity Framework.
            </summary>
        </member>
        <member name="M:Majid.EntityFrameworkCore.Uow.EfCoreUnitOfWork.#ctor(Majid.Dependency.IIocResolver,Majid.Domain.Uow.IConnectionStringResolver,Majid.Domain.Uow.IUnitOfWorkFilterExecuter,Majid.EntityFrameworkCore.IDbContextResolver,Majid.Domain.Uow.IUnitOfWorkDefaultOptions,Majid.EntityFramework.IDbContextTypeMatcher,Majid.EntityFrameworkCore.Uow.IEfCoreTransactionStrategy)">
            <summary>
            Creates a new <see cref="T:Majid.EntityFrameworkCore.Uow.EfCoreUnitOfWork"/>.
            </summary>
        </member>
        <member name="T:Majid.EntityFrameworkCore.Uow.UnitOfWorkDbContextProvider`1">
            <summary>
            Implements <see cref="T:Majid.EntityFrameworkCore.IDbContextProvider`1"/> that gets DbContext from
            active unit of work.
            </summary>
            <typeparam name="TDbContext">Type of the DbContext</typeparam>
        </member>
        <member name="M:Majid.EntityFrameworkCore.Uow.UnitOfWorkDbContextProvider`1.#ctor(Majid.Domain.Uow.ICurrentUnitOfWorkProvider)">
            <summary>
            Creates a new <see cref="T:Majid.EntityFrameworkCore.Uow.UnitOfWorkDbContextProvider`1"/>.
            </summary>
            <param name="currentUnitOfWorkProvider"></param>
        </member>
        <member name="T:Majid.EntityFrameworkCore.Uow.UnitOfWorkExtensions">
            <summary>
            Extension methods for UnitOfWork.
            </summary>
        </member>
        <member name="M:Majid.EntityFrameworkCore.Uow.UnitOfWorkExtensions.GetDbContext``1(Majid.Domain.Uow.IActiveUnitOfWork,System.Nullable{Majid.MultiTenancy.MultiTenancySides},System.String)">
            <summary>
            Gets a DbContext as a part of active unit of work.
            This method can be called when current unit of work is an <see cref="T:Majid.EntityFrameworkCore.Uow.EfCoreUnitOfWork"/>.
            </summary>
            <typeparam name="TDbContext">Type of the DbContext</typeparam>
            <param name="unitOfWork">Current (active) unit of work</param>
            <param name="multiTenancySide">Multitenancy side</param>
            <param name="name">
            A custom name for the dbcontext to get a named dbcontext.
            If there is no dbcontext in this unit of work with given name, then a new one is created.
            </param>
        </member>
        <member name="F:Majid.EntityFrameworkCore.Utils.DateTimePropertyInfoHelper.DateTimeProperties">
            <summary>
            Key: Entity type
            Value: DateTime property infos
            </summary>
        </member>
    </members>
</doc>
