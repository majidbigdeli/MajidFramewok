<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Majid.Zero.Common</name>
    </assembly>
    <members>
        <member name="T:Majid.Application.Editions.Edition">
            <summary>
            Represents an edition of the application.
            </summary>
        </member>
        <member name="F:Majid.Application.Editions.Edition.MaxNameLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Application.Editions.Edition.Name"/> property.
            </summary>
        </member>
        <member name="F:Majid.Application.Editions.Edition.MaxDisplayNameLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Application.Editions.Edition.Name"/> property.
            </summary>
        </member>
        <member name="P:Majid.Application.Editions.Edition.Name">
            <summary>
            Unique name of this edition.
            </summary>
        </member>
        <member name="P:Majid.Application.Editions.Edition.DisplayName">
            <summary>
            Display name of this edition.
            </summary>
        </member>
        <member name="T:Majid.Application.Features.EditionFeatureSetting">
            <summary>
            Feature setting for an <see cref="P:Majid.Application.Features.EditionFeatureSetting.Edition"/>.
            </summary>
        </member>
        <member name="P:Majid.Application.Features.EditionFeatureSetting.Edition">
            <summary>
            Gets or sets the edition.
            </summary>
            <value>
            The edition.
            </value>
        </member>
        <member name="P:Majid.Application.Features.EditionFeatureSetting.EditionId">
            <summary>
            Gets or sets the edition Id.
            </summary>
            <value>
            The edition Id.
            </value>
        </member>
        <member name="M:Majid.Application.Features.EditionFeatureSetting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Application.Features.EditionFeatureSetting"/> class.
            </summary>
        </member>
        <member name="M:Majid.Application.Features.EditionFeatureSetting.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Application.Features.EditionFeatureSetting"/> class.
            </summary>
            <param name="editionId">The edition Id.</param>
            <param name="name">Feature name.</param>
            <param name="value">Feature value.</param>
        </member>
        <member name="T:Majid.Application.Features.FeatureSetting">
            <summary>
            Base class for feature settings
            </summary>
        </member>
        <member name="F:Majid.Application.Features.FeatureSetting.MaxNameLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Application.Features.FeatureSetting.Name"/> field.
            </summary>
        </member>
        <member name="F:Majid.Application.Features.FeatureSetting.MaxValueLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Application.Features.FeatureSetting.Value"/> property.
            </summary>
        </member>
        <member name="P:Majid.Application.Features.FeatureSetting.Name">
            <summary>
            Feature name.
            </summary>
        </member>
        <member name="P:Majid.Application.Features.FeatureSetting.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="M:Majid.Application.Features.FeatureSetting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Application.Features.FeatureSetting"/> class.
            </summary>
        </member>
        <member name="M:Majid.Application.Features.FeatureSetting.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Application.Features.FeatureSetting"/> class.
            </summary>
            <param name="name">Feature name.</param>
            <param name="value">Feature value.</param>
        </member>
        <member name="T:Majid.Application.Features.MajidFeatureValueStore`2">
            <summary>
            Implements <see cref="T:Majid.Application.Features.IFeatureValueStore"/>.
            </summary>
        </member>
        <member name="M:Majid.Application.Features.MajidFeatureValueStore`2.#ctor(Majid.Runtime.Caching.ICacheManager,Majid.Domain.Repositories.IRepository{Majid.MultiTenancy.TenantFeatureSetting,System.Int64},Majid.Domain.Repositories.IRepository{`0},Majid.Domain.Repositories.IRepository{Majid.Application.Features.EditionFeatureSetting,System.Int64},Majid.Application.Features.IFeatureManager,Majid.Domain.Uow.IUnitOfWorkManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Application.Features.MajidFeatureValueStore`2"/> class.
            </summary>
        </member>
        <member name="M:Majid.Application.Features.MajidFeatureValueStore`2.GetValueOrNullAsync(System.Int32,Majid.Application.Features.Feature)">
            <inheritdoc/>
        </member>
        <member name="T:Majid.Auditing.AuditingStore">
            <summary>
            Implements <see cref="T:Majid.Auditing.IAuditingStore"/> to save auditing informations to database.
            </summary>
        </member>
        <member name="M:Majid.Auditing.AuditingStore.#ctor(Majid.Domain.Repositories.IRepository{Majid.Auditing.AuditLog,System.Int64})">
            <summary>
            Creates  a new <see cref="T:Majid.Auditing.AuditingStore"/>.
            </summary>
        </member>
        <member name="T:Majid.Auditing.AuditLog">
            <summary>
            Used to store audit logs.
            </summary>
        </member>
        <member name="F:Majid.Auditing.AuditLog.MaxServiceNameLength">
            <summary>
            Maximum length of <see cref="P:Majid.Auditing.AuditLog.ServiceName"/> property.
            </summary>
        </member>
        <member name="F:Majid.Auditing.AuditLog.MaxMethodNameLength">
            <summary>
            Maximum length of <see cref="P:Majid.Auditing.AuditLog.MethodName"/> property.
            </summary>
        </member>
        <member name="F:Majid.Auditing.AuditLog.MaxParametersLength">
            <summary>
            Maximum length of <see cref="P:Majid.Auditing.AuditLog.Parameters"/> property.
            </summary>
        </member>
        <member name="F:Majid.Auditing.AuditLog.MaxClientIpAddressLength">
            <summary>
            Maximum length of <see cref="P:Majid.Auditing.AuditLog.ClientIpAddress"/> property.
            </summary>
        </member>
        <member name="F:Majid.Auditing.AuditLog.MaxClientNameLength">
            <summary>
            Maximum length of <see cref="P:Majid.Auditing.AuditLog.ClientName"/> property.
            </summary>
        </member>
        <member name="F:Majid.Auditing.AuditLog.MaxBrowserInfoLength">
            <summary>
            Maximum length of <see cref="P:Majid.Auditing.AuditLog.BrowserInfo"/> property.
            </summary>
        </member>
        <member name="F:Majid.Auditing.AuditLog.MaxExceptionLength">
            <summary>
            Maximum length of <see cref="P:Majid.Auditing.AuditLog.Exception"/> property.
            </summary>
        </member>
        <member name="F:Majid.Auditing.AuditLog.MaxCustomDataLength">
            <summary>
            Maximum length of <see cref="P:Majid.Auditing.AuditLog.CustomData"/> property.
            </summary>
        </member>
        <member name="P:Majid.Auditing.AuditLog.TenantId">
            <summary>
            TenantId.
            </summary>
        </member>
        <member name="P:Majid.Auditing.AuditLog.UserId">
            <summary>
            UserId.
            </summary>
        </member>
        <member name="P:Majid.Auditing.AuditLog.ServiceName">
            <summary>
            Service (class/interface) name.
            </summary>
        </member>
        <member name="P:Majid.Auditing.AuditLog.MethodName">
            <summary>
            Executed method name.
            </summary>
        </member>
        <member name="P:Majid.Auditing.AuditLog.Parameters">
            <summary>
            Calling parameters.
            </summary>
        </member>
        <member name="P:Majid.Auditing.AuditLog.ExecutionTime">
            <summary>
            Start time of the method execution.
            </summary>
        </member>
        <member name="P:Majid.Auditing.AuditLog.ExecutionDuration">
            <summary>
            Total duration of the method call as milliseconds.
            </summary>
        </member>
        <member name="P:Majid.Auditing.AuditLog.ClientIpAddress">
            <summary>
            IP address of the client.
            </summary>
        </member>
        <member name="P:Majid.Auditing.AuditLog.ClientName">
            <summary>
            Name (generally computer name) of the client.
            </summary>
        </member>
        <member name="P:Majid.Auditing.AuditLog.BrowserInfo">
            <summary>
            Browser information if this method is called in a web request.
            </summary>
        </member>
        <member name="P:Majid.Auditing.AuditLog.Exception">
            <summary>
            Exception object, if an exception occured during execution of the method.
            </summary>
        </member>
        <member name="P:Majid.Auditing.AuditLog.ImpersonatorUserId">
            <summary>
            <see cref="P:Majid.Auditing.AuditInfo.ImpersonatorUserId"/>.
            </summary>
        </member>
        <member name="P:Majid.Auditing.AuditLog.ImpersonatorTenantId">
            <summary>
            <see cref="P:Majid.Auditing.AuditInfo.ImpersonatorTenantId"/>.
            </summary>
        </member>
        <member name="P:Majid.Auditing.AuditLog.CustomData">
            <summary>
            <see cref="P:Majid.Auditing.AuditInfo.CustomData"/>.
            </summary>
        </member>
        <member name="M:Majid.Auditing.AuditLog.CreateFromAuditInfo(Majid.Auditing.AuditInfo)">
            <summary>
            Creates a new CreateFromAuditInfo from given <see cref="!:auditInfo"/>.
            </summary>
            <param name="auditInfo">Source <see cref="T:Majid.Auditing.AuditInfo"/> object</param>
            <returns>The <see cref="T:Majid.Auditing.AuditLog"/> object that is created using <see cref="!:auditInfo"/></returns>
        </member>
        <member name="M:Majid.Auditing.AuditLog.GetMajidClearException(System.Exception)">
            <summary>
            Make audit exceptions more explicit.
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="T:Majid.Authorization.PermissionGrantInfo">
            <summary>
            Represents a permission <see cref="P:Majid.Authorization.PermissionGrantInfo.Name"/> with <see cref="P:Majid.Authorization.PermissionGrantInfo.IsGranted"/> information.
            </summary>
        </member>
        <member name="P:Majid.Authorization.PermissionGrantInfo.Name">
            <summary>
            Name of the permission.
            </summary>
        </member>
        <member name="P:Majid.Authorization.PermissionGrantInfo.IsGranted">
            <summary>
            Is this permission granted Prohibited?
            </summary>
        </member>
        <member name="M:Majid.Authorization.PermissionGrantInfo.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:Majid.Authorization.PermissionGrantInfo"/>.
            </summary>
            <param name="name"></param>
            <param name="isGranted"></param>
        </member>
        <member name="T:Majid.Authorization.PermissionSetting">
            <summary>
            Used to grant/deny a permission for a role or user.
            </summary>
        </member>
        <member name="F:Majid.Authorization.PermissionSetting.MaxNameLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.PermissionSetting.Name"/> field.
            </summary>
        </member>
        <member name="P:Majid.Authorization.PermissionSetting.Name">
            <summary>
            Unique name of the permission.
            </summary>
        </member>
        <member name="P:Majid.Authorization.PermissionSetting.IsGranted">
            <summary>
            Is this role granted for this permission.
            Default value: true.
            </summary>
        </member>
        <member name="M:Majid.Authorization.PermissionSetting.#ctor">
            <summary>
            Creates a new <see cref="T:Majid.Authorization.PermissionSetting"/> entity.
            </summary>
        </member>
        <member name="T:Majid.Authorization.Roles.IRolePermissionStore`1">
            <summary>
            Used to perform permission database operations for a role.
            </summary>
        </member>
        <member name="M:Majid.Authorization.Roles.IRolePermissionStore`1.AddPermissionAsync(`0,Majid.Authorization.PermissionGrantInfo)">
            <summary>
            Adds a permission grant setting to a role.
            </summary>
            <param name="role">Role</param>
            <param name="permissionGrant">Permission grant setting info</param>
        </member>
        <member name="M:Majid.Authorization.Roles.IRolePermissionStore`1.RemovePermissionAsync(`0,Majid.Authorization.PermissionGrantInfo)">
            <summary>
            Removes a permission grant setting from a role.
            </summary>
            <param name="role">Role</param>
            <param name="permissionGrant">Permission grant setting info</param>
        </member>
        <member name="M:Majid.Authorization.Roles.IRolePermissionStore`1.GetPermissionsAsync(`0)">
            <summary>
            Gets permission grant setting informations for a role.
            </summary>
            <param name="role">Role</param>
            <returns>List of permission setting informations</returns>
        </member>
        <member name="M:Majid.Authorization.Roles.IRolePermissionStore`1.GetPermissionsAsync(System.Int32)">
            <summary>
            Gets permission grant setting informations for a role.
            </summary>
            <param name="roleId">Role id</param>
            <returns>List of permission setting informations</returns>
        </member>
        <member name="M:Majid.Authorization.Roles.IRolePermissionStore`1.HasPermissionAsync(System.Int32,Majid.Authorization.PermissionGrantInfo)">
            <summary>
            Checks whether a role has a permission grant setting info.
            </summary>
            <param name="roleId">Role id</param>
            <param name="permissionGrant">Permission grant setting info</param>
            <returns></returns>
        </member>
        <member name="M:Majid.Authorization.Roles.IRolePermissionStore`1.RemoveAllPermissionSettingsAsync(`0)">
            <summary>
            Deleted all permission settings for a role.
            </summary>
            <param name="role">Role</param>
        </member>
        <member name="T:Majid.Authorization.Roles.MajidRoleBase">
            <summary>
            Base class for role.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Roles.MajidRoleBase.MaxDisplayNameLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Roles.MajidRoleBase.DisplayName"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Roles.MajidRoleBase.MaxNameLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Roles.MajidRoleBase.Name"/> property.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Roles.MajidRoleBase.TenantId">
            <summary>
            Tenant's Id, if this role is a tenant-level role. Null, if not.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Roles.MajidRoleBase.Name">
            <summary>
            Unique name of this role.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Roles.MajidRoleBase.DisplayName">
            <summary>
            Display name of this role.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Roles.MajidRoleBase.IsStatic">
            <summary>
            Is this a static role?
            Static roles can not be deleted, can not change their name.
            They can be used programmatically.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Roles.MajidRoleBase.IsDefault">
            <summary>
            Is this role will be assigned to new users as default?
            </summary>
        </member>
        <member name="P:Majid.Authorization.Roles.MajidRoleBase.Permissions">
            <summary>
            List of permissions of the role.
            </summary>
        </member>
        <member name="T:Majid.Authorization.Roles.PermissionEqualityComparer">
            <summary>
            Equality comparer for <see cref="T:Majid.Authorization.Permission"/> objects.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Roles.RoleClaim.MaxClaimTypeLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Roles.RoleClaim.ClaimType"/> property.
            </summary>
        </member>
        <member name="T:Majid.Authorization.Roles.RolePermissionCacheItem">
            <summary>
            Used to cache permissions of a role.
            </summary>
        </member>
        <member name="T:Majid.Authorization.Roles.RolePermissionSetting">
            <summary>
            Used to store setting for a permission for a role.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Roles.RolePermissionSetting.RoleId">
            <summary>
            Role id.
            </summary>
        </member>
        <member name="T:Majid.Authorization.Users.DefaultExternalAuthenticationSource`2">
            <summary>
            This is a helper base class to easily update <see cref="T:Majid.Authorization.Users.IExternalAuthenticationSource`2"/>.
            Implements some methods as default but you can override all methods.
            </summary>
            <typeparam name="TTenant">Tenant type</typeparam>
            <typeparam name="TUser">User type</typeparam>
        </member>
        <member name="P:Majid.Authorization.Users.DefaultExternalAuthenticationSource`2.Name">
            <inheritdoc/>
        </member>
        <member name="M:Majid.Authorization.Users.DefaultExternalAuthenticationSource`2.TryAuthenticateAsync(System.String,System.String,`0)">
            <inheritdoc/>
        </member>
        <member name="M:Majid.Authorization.Users.DefaultExternalAuthenticationSource`2.CreateUserAsync(System.String,`0)">
            <inheritdoc/>
        </member>
        <member name="M:Majid.Authorization.Users.DefaultExternalAuthenticationSource`2.UpdateUserAsync(`1,`0)">
            <inheritdoc/>
        </member>
        <member name="T:Majid.Authorization.Users.IExternalAuthenticationSource`2">
            <summary>
            Defines an external authorization source.
            </summary>
            <typeparam name="TTenant">Tenant type</typeparam>
            <typeparam name="TUser">User type</typeparam>
        </member>
        <member name="P:Majid.Authorization.Users.IExternalAuthenticationSource`2.Name">
            <summary>
            Unique name of the authentication source.
            This source name is set to <see cref="P:Majid.Authorization.Users.MajidUserBase.AuthenticationSource"/>
            if the user authenticated by this authentication source
            </summary>
        </member>
        <member name="M:Majid.Authorization.Users.IExternalAuthenticationSource`2.TryAuthenticateAsync(System.String,System.String,`0)">
            <summary>
            Used to try authenticate a user by this source.
            </summary>
            <param name="userNameOrEmailAddress">User name or email address</param>
            <param name="plainPassword">Plain password of the user</param>
            <param name="tenant">Tenant of the user or null (if user is a host user)</param>
            <returns>True, indicates that this used has authenticated by this source</returns>
        </member>
        <member name="M:Majid.Authorization.Users.IExternalAuthenticationSource`2.CreateUserAsync(System.String,`0)">
            <summary>
            This method is a user authenticated by this source which does not exists yet.
            So, source should create the User and fill properties.
            </summary>
            <param name="userNameOrEmailAddress">User name or email address</param>
            <param name="tenant">Tenant of the user or null (if user is a host user)</param>
            <returns>Newly created user</returns>
        </member>
        <member name="M:Majid.Authorization.Users.IExternalAuthenticationSource`2.UpdateUserAsync(`1,`0)">
            <summary>
            This method is called after an existing user is authenticated by this source.
            It can be used to update some properties of the user by the source.
            </summary>
            <param name="user">The user that can be updated</param>
            <param name="tenant">Tenant of the user or null (if user is a host user)</param>
        </member>
        <member name="T:Majid.Authorization.Users.IUserPermissionStore`1">
            <summary>
            Used to perform permission database operations for a user.
            </summary>
        </member>
        <member name="M:Majid.Authorization.Users.IUserPermissionStore`1.AddPermissionAsync(`0,Majid.Authorization.PermissionGrantInfo)">
            <summary>
            Adds a permission grant setting to a user.
            </summary>
            <param name="user">User</param>
            <param name="permissionGrant">Permission grant setting info</param>
        </member>
        <member name="M:Majid.Authorization.Users.IUserPermissionStore`1.RemovePermissionAsync(`0,Majid.Authorization.PermissionGrantInfo)">
            <summary>
            Removes a permission grant setting from a user.
            </summary>
            <param name="user">User</param>
            <param name="permissionGrant">Permission grant setting info</param>
        </member>
        <member name="M:Majid.Authorization.Users.IUserPermissionStore`1.GetPermissionsAsync(System.Int64)">
            <summary>
            Gets permission grant setting informations for a user.
            </summary>
            <param name="userId">User id</param>
            <returns>List of permission setting informations</returns>
        </member>
        <member name="M:Majid.Authorization.Users.IUserPermissionStore`1.HasPermissionAsync(System.Int64,Majid.Authorization.PermissionGrantInfo)">
            <summary>
            Checks whether a role has a permission grant setting info.
            </summary>
            <param name="userId">User id</param>
            <param name="permissionGrant">Permission grant setting info</param>
            <returns></returns>
        </member>
        <member name="M:Majid.Authorization.Users.IUserPermissionStore`1.RemoveAllPermissionSettingsAsync(`0)">
            <summary>
            Deleted all permission settings for a role.
            </summary>
            <param name="user">User</param>
        </member>
        <member name="T:Majid.Authorization.Users.MajidUserBase">
            <summary>
            Base class for user.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.MajidUserBase.MaxUserNameLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Users.MajidUserBase.UserName"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.MajidUserBase.MaxEmailAddressLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Users.MajidUserBase.EmailAddress"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.MajidUserBase.MaxNameLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Users.MajidUserBase.Name"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.MajidUserBase.MaxSurnameLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Users.MajidUserBase.Surname"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.MajidUserBase.MaxAuthenticationSourceLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Users.MajidUserBase.AuthenticationSource"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.MajidUserBase.AdminUserName">
            <summary>
            UserName of the admin.
            admin can not be deleted and UserName of the admin can not be changed.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.MajidUserBase.MaxPasswordLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Users.MajidUserBase.Password"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.MajidUserBase.MaxPlainPasswordLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Users.MajidUserBase.Password"/> without hashed.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.MajidUserBase.MaxEmailConfirmationCodeLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Users.MajidUserBase.EmailConfirmationCode"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.MajidUserBase.MaxPasswordResetCodeLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Users.MajidUserBase.PasswordResetCode"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.MajidUserBase.MaxPhoneNumberLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Users.MajidUserBase.PhoneNumber"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.MajidUserBase.MaxSecurityStampLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Users.MajidUserBase.SecurityStamp"/> property.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.AuthenticationSource">
            <summary>
            Authorization source name.
            It's set to external authentication source name if created by an external source.
            Default: null.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.UserName">
            <summary>
            User name.
            User name must be unique for it's tenant.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.TenantId">
            <summary>
            Tenant Id of this user.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.EmailAddress">
            <summary>
            Email address of the user.
            Email address must be unique for it's tenant.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.Name">
            <summary>
            Name of the user.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.Surname">
            <summary>
            Surname of the user.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.FullName">
            <summary>
            Return full name (Name Surname )
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.Password">
            <summary>
            Password of the user.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.EmailConfirmationCode">
            <summary>
            Confirmation code for email.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.PasswordResetCode">
            <summary>
            Reset code for password.
            It's not valid if it's null.
            It's for one usage and must be set to null after reset.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.LockoutEndDateUtc">
            <summary>
            Lockout end date.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.AccessFailedCount">
            <summary>
            Gets or sets the access failed count.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.IsLockoutEnabled">
            <summary>
            Gets or sets the lockout enabled.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.PhoneNumber">
            <summary>
            Gets or sets the phone number.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.IsPhoneNumberConfirmed">
            <summary>
            Is the <see cref="P:Majid.Authorization.Users.MajidUserBase.PhoneNumber"/> confirmed.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.SecurityStamp">
            <summary>
            Gets or sets the security stamp.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.IsTwoFactorEnabled">
            <summary>
            Is two factor auth enabled.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.Logins">
            <summary>
            Login definitions for this user.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.Roles">
            <summary>
            Roles of this user.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.Claims">
            <summary>
            Claims of this user.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.Permissions">
            <summary>
            Permission definitions for this user.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.Settings">
            <summary>
            Settings for this user.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.IsEmailConfirmed">
            <summary>
            Is the <see cref="P:Majid.Authorization.Users.MajidUserBase.EmailAddress"/> confirmed.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.IsActive">
            <summary>
            Is this user active?
            If as user is not active, he/she can not use the application.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.MajidUserBase.LastLoginTime">
            <summary>
            The last time this user entered to the system.
            </summary>
        </member>
        <member name="M:Majid.Authorization.Users.MajidUserBase.ToUserIdentifier">
            <summary>
            Creates <see cref="T:Majid.UserIdentifier"/> from this User.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Majid.Authorization.Users.UserAccount">
            <summary>
            Represents a summary user
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.UserAccount.MaxUserNameLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Users.UserAccount.UserName"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.UserAccount.MaxEmailAddressLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Users.UserAccount.EmailAddress"/> property.
            </summary>
        </member>
        <member name="T:Majid.Authorization.Users.UserAccountSynchronizer">
            <summary>
            Synchronizes a user's information to user account.
            </summary>
        </member>
        <member name="M:Majid.Authorization.Users.UserAccountSynchronizer.#ctor(Majid.Domain.Repositories.IRepository{Majid.Authorization.Users.UserAccount,System.Int64},Majid.Domain.Uow.IUnitOfWorkManager)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Majid.Authorization.Users.UserAccountSynchronizer.HandleEvent(Majid.Events.Bus.Entities.EntityCreatedEventData{Majid.Authorization.Users.MajidUserBase})">
            <summary>
            Handles creation event of user
            </summary>
        </member>
        <member name="M:Majid.Authorization.Users.UserAccountSynchronizer.HandleEvent(Majid.Events.Bus.Entities.EntityDeletedEventData{Majid.Authorization.Users.MajidUserBase})">
            <summary>
            Handles deletion event of user
            </summary>
            <param name="eventData"></param>
        </member>
        <member name="M:Majid.Authorization.Users.UserAccountSynchronizer.HandleEvent(Majid.Events.Bus.Entities.EntityUpdatedEventData{Majid.Authorization.Users.MajidUserBase})">
            <summary>
            Handles update event of user
            </summary>
            <param name="eventData"></param>
        </member>
        <member name="F:Majid.Authorization.Users.UserClaim.MaxClaimTypeLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Authorization.Users.UserClaim.ClaimType"/> property.
            </summary>
        </member>
        <member name="T:Majid.Authorization.Users.UserLogin">
            <summary>
            Used to store a User Login for external Login services.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.UserLogin.MaxLoginProviderLength">
            <summary>
            Maximum length of <see cref="P:Majid.Authorization.Users.UserLogin.LoginProvider"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.UserLogin.MaxProviderKeyLength">
            <summary>
            Maximum length of <see cref="P:Majid.Authorization.Users.UserLogin.ProviderKey"/> property.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserLogin.UserId">
            <summary>
            Id of the User.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserLogin.LoginProvider">
            <summary>
            Login Provider.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserLogin.ProviderKey">
            <summary>
            Key in the <see cref="P:Majid.Authorization.Users.UserLogin.LoginProvider"/>.
            </summary>
        </member>
        <member name="T:Majid.Authorization.Users.UserLoginAttempt">
            <summary>
            Used to save a login attempt of a user.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.UserLoginAttempt.MaxTenancyNameLength">
            <summary>
            Max length of the <see cref="P:Majid.Authorization.Users.UserLoginAttempt.TenancyName"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.UserLoginAttempt.MaxUserNameOrEmailAddressLength">
            <summary>
            Max length of the <see cref="P:Majid.Authorization.Users.UserLoginAttempt.TenancyName"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.UserLoginAttempt.MaxClientIpAddressLength">
            <summary>
            Maximum length of <see cref="P:Majid.Authorization.Users.UserLoginAttempt.ClientIpAddress"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.UserLoginAttempt.MaxClientNameLength">
            <summary>
            Maximum length of <see cref="P:Majid.Authorization.Users.UserLoginAttempt.ClientName"/> property.
            </summary>
        </member>
        <member name="F:Majid.Authorization.Users.UserLoginAttempt.MaxBrowserInfoLength">
            <summary>
            Maximum length of <see cref="P:Majid.Authorization.Users.UserLoginAttempt.BrowserInfo"/> property.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserLoginAttempt.TenantId">
            <summary>
            Tenant's Id, if <see cref="P:Majid.Authorization.Users.UserLoginAttempt.TenancyName"/> was a valid tenant name.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserLoginAttempt.TenancyName">
            <summary>
            Tenancy name.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserLoginAttempt.UserId">
            <summary>
            User's Id, if <see cref="P:Majid.Authorization.Users.UserLoginAttempt.UserNameOrEmailAddress"/> was a valid username or email address.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserLoginAttempt.UserNameOrEmailAddress">
            <summary>
            User name or email address
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserLoginAttempt.ClientIpAddress">
            <summary>
            IP address of the client.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserLoginAttempt.ClientName">
            <summary>
            Name (generally computer name) of the client.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserLoginAttempt.BrowserInfo">
            <summary>
            Browser information if this method is called in a web request.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserLoginAttempt.Result">
            <summary>
            Login attempt result.
            </summary>
        </member>
        <member name="M:Majid.Authorization.Users.UserLoginAttempt.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Authorization.Users.UserLoginAttempt"/> class.
            </summary>
        </member>
        <member name="T:Majid.Authorization.Users.UserOrganizationUnit">
            <summary>
            Represents membership of a User to an OU.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserOrganizationUnit.TenantId">
            <summary>
            TenantId of this entity.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserOrganizationUnit.UserId">
            <summary>
            Id of the User.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserOrganizationUnit.OrganizationUnitId">
            <summary>
            Id of the <see cref="T:Majid.Organizations.OrganizationUnit"/>.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserOrganizationUnit.IsDeleted">
            <summary>
            Specifies if the organization is soft deleted or not.
            </summary>
        </member>
        <member name="M:Majid.Authorization.Users.UserOrganizationUnit.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Authorization.Users.UserOrganizationUnit"/> class.
            </summary>
        </member>
        <member name="M:Majid.Authorization.Users.UserOrganizationUnit.#ctor(System.Nullable{System.Int32},System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Authorization.Users.UserOrganizationUnit"/> class.
            </summary>
            <param name="tenantId">TenantId</param>
            <param name="userId">Id of the User.</param>
            <param name="organizationUnitId">Id of the <see cref="T:Majid.Organizations.OrganizationUnit"/>.</param>
        </member>
        <member name="T:Majid.Authorization.Users.UserOrganizationUnitRemover">
            <summary>
            Removes the user from all organization units when a user is deleted.
            </summary>
        </member>
        <member name="T:Majid.Authorization.Users.UserPermissionCacheItem">
            <summary>
            Used to cache roles and permissions of a user.
            </summary>
        </member>
        <member name="T:Majid.Authorization.Users.UserPermissionSetting">
            <summary>
            Used to store setting for a permission for a user.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserPermissionSetting.UserId">
            <summary>
            User id.
            </summary>
        </member>
        <member name="T:Majid.Authorization.Users.UserRole">
            <summary>
            Represents role record of a user. 
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserRole.UserId">
            <summary>
            User id.
            </summary>
        </member>
        <member name="P:Majid.Authorization.Users.UserRole.RoleId">
            <summary>
            Role id.
            </summary>
        </member>
        <member name="M:Majid.Authorization.Users.UserRole.#ctor">
            <summary>
            Creates a new <see cref="T:Majid.Authorization.Users.UserRole"/> object.
            </summary>
        </member>
        <member name="M:Majid.Authorization.Users.UserRole.#ctor(System.Nullable{System.Int32},System.Int64,System.Int32)">
            <summary>
            Creates a new <see cref="T:Majid.Authorization.Users.UserRole"/> object.
            </summary>
            <param name="userId">User id</param>
            <param name="roleId">Role id</param>
        </member>
        <member name="T:Majid.Authorization.Users.UserRoleRemover">
            <summary>
            Removes the user from all user roles when a user is deleted.
            </summary>
        </member>
        <member name="T:Majid.BackgroundJobs.BackgroundJobStore">
            <summary>
            Implements <see cref="T:Majid.BackgroundJobs.IBackgroundJobStore"/> using repositories.
            </summary>
        </member>
        <member name="T:Majid.Configuration.Setting">
            <summary>
            Represents a setting for a tenant or user.
            </summary>
        </member>
        <member name="F:Majid.Configuration.Setting.MaxNameLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Configuration.Setting.Name"/> property.
            </summary>
        </member>
        <member name="F:Majid.Configuration.Setting.MaxValueLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Configuration.Setting.Value"/> property.
            </summary>
        </member>
        <member name="P:Majid.Configuration.Setting.TenantId">
            <summary>
            TenantId for this setting.
            TenantId is null if this setting is not Tenant level.
            </summary>
        </member>
        <member name="P:Majid.Configuration.Setting.UserId">
            <summary>
            UserId for this setting.
            UserId is null if this setting is not user level.
            </summary>
        </member>
        <member name="P:Majid.Configuration.Setting.Name">
            <summary>
            Unique name of the setting.
            </summary>
        </member>
        <member name="P:Majid.Configuration.Setting.Value">
            <summary>
            Value of the setting.
            </summary>
        </member>
        <member name="M:Majid.Configuration.Setting.#ctor">
            <summary>
            Creates a new <see cref="T:Majid.Configuration.Setting"/> object.
            </summary>
        </member>
        <member name="M:Majid.Configuration.Setting.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int64},System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Majid.Configuration.Setting"/> object.
            </summary>
            <param name="tenantId">TenantId for this setting</param>
            <param name="userId">UserId for this setting</param>
            <param name="name">Unique name of the setting</param>
            <param name="value">Value of the setting</param>
        </member>
        <member name="T:Majid.Configuration.SettingExtensions">
            <summary>
            Implements methods to convert objects between SettingInfo and Setting classes.
            </summary>
        </member>
        <member name="M:Majid.Configuration.SettingExtensions.ToSetting(Majid.Configuration.SettingInfo)">
            <summary>
            Creates new <see cref="T:Majid.Configuration.Setting"/> object from given <see cref="T:Majid.Configuration.SettingInfo"/> object.
            </summary>
        </member>
        <member name="M:Majid.Configuration.SettingExtensions.ToSettingInfo(Majid.Configuration.Setting)">
            <summary>
            Creates new <see cref="T:Majid.Configuration.SettingInfo"/> object from given <see cref="T:Majid.Configuration.Setting"/> object.
            </summary>
        </member>
        <member name="T:Majid.Configuration.SettingStore">
            <summary>
            Implements <see cref="T:Majid.Configuration.ISettingStore"/>.
            </summary>
        </member>
        <member name="M:Majid.Configuration.SettingStore.#ctor(Majid.Domain.Repositories.IRepository{Majid.Configuration.Setting,System.Int64},Majid.Domain.Uow.IUnitOfWorkManager)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Majid.EntityHistory.EntityHistoryStore">
            <summary>
            Implements <see cref="T:Majid.EntityHistory.IEntityHistoryStore"/> to save entity change informations to database.
            </summary>
        </member>
        <member name="M:Majid.EntityHistory.EntityHistoryStore.#ctor(Majid.Domain.Repositories.IRepository{Majid.EntityHistory.EntityChangeSet,System.Int64})">
            <summary>
            Creates a new <see cref="T:Majid.EntityHistory.EntityHistoryStore"/>.
            </summary>
        </member>
        <member name="T:Majid.Localization.ApplicationLanguage">
            <summary>
            Represents a language of the application.
            </summary>
        </member>
        <member name="F:Majid.Localization.ApplicationLanguage.MaxNameLength">
            <summary>
            The maximum name length.
            </summary>
        </member>
        <member name="F:Majid.Localization.ApplicationLanguage.MaxDisplayNameLength">
            <summary>
            The maximum display name length.
            </summary>
        </member>
        <member name="F:Majid.Localization.ApplicationLanguage.MaxIconLength">
            <summary>
            The maximum icon length.
            </summary>
        </member>
        <member name="P:Majid.Localization.ApplicationLanguage.TenantId">
            <summary>
            TenantId of this entity. Can be null for host.
            </summary>
        </member>
        <member name="P:Majid.Localization.ApplicationLanguage.Name">
            <summary>
            Gets or sets the name of the culture, like "en" or "en-US".
            </summary>
        </member>
        <member name="P:Majid.Localization.ApplicationLanguage.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
        </member>
        <member name="P:Majid.Localization.ApplicationLanguage.Icon">
            <summary>
            Gets or sets the icon.
            </summary>
        </member>
        <member name="P:Majid.Localization.ApplicationLanguage.IsDisabled">
            <summary>
            Is this language active. Inactive languages are not get by <see cref="T:Majid.Localization.IApplicationLanguageManager"/>.
            </summary>
        </member>
        <member name="M:Majid.Localization.ApplicationLanguage.#ctor">
            <summary>
            Creates a new <see cref="T:Majid.Localization.ApplicationLanguage"/> object.
            </summary>
        </member>
        <member name="T:Majid.Localization.ApplicationLanguageManager">
            <summary>
            Manages host and tenant languages.
            </summary>
        </member>
        <member name="F:Majid.Localization.ApplicationLanguageManager.CacheName">
            <summary>
            Cache name for languages.
            </summary>
        </member>
        <member name="M:Majid.Localization.ApplicationLanguageManager.#ctor(Majid.Domain.Repositories.IRepository{Majid.Localization.ApplicationLanguage},Majid.Runtime.Caching.ICacheManager,Majid.Domain.Uow.IUnitOfWorkManager,Majid.Configuration.ISettingManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Localization.ApplicationLanguageManager"/> class.
            </summary>
        </member>
        <member name="M:Majid.Localization.ApplicationLanguageManager.GetLanguagesAsync(System.Nullable{System.Int32})">
            <summary>
            Gets list of all languages available to given tenant (or null for host)
            </summary>
            <param name="tenantId">TenantId or null for host</param>
        </member>
        <member name="M:Majid.Localization.ApplicationLanguageManager.AddAsync(Majid.Localization.ApplicationLanguage)">
            <summary>
            Adds a new language.
            </summary>
            <param name="language">The language.</param>
        </member>
        <member name="M:Majid.Localization.ApplicationLanguageManager.RemoveAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes a language.
            </summary>
            <param name="tenantId">Tenant Id or null for host.</param>
            <param name="languageName">Name of the language.</param>
        </member>
        <member name="M:Majid.Localization.ApplicationLanguageManager.UpdateAsync(System.Nullable{System.Int32},Majid.Localization.ApplicationLanguage)">
            <summary>
            Updates a language.
            </summary>
        </member>
        <member name="M:Majid.Localization.ApplicationLanguageManager.GetDefaultLanguageOrNullAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the default language or null for a tenant or the host.
            </summary>
            <param name="tenantId">Tenant Id of null for host</param>
        </member>
        <member name="M:Majid.Localization.ApplicationLanguageManager.SetDefaultLanguageAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Sets the default language for a tenant or the host.
            </summary>
            <param name="tenantId">Tenant Id of null for host</param>
            <param name="languageName">Name of the language.</param>
        </member>
        <member name="T:Majid.Localization.ApplicationLanguageProvider">
            <summary>
            Implements <see cref="T:Majid.Localization.ILanguageProvider"/> to get languages from <see cref="T:Majid.Localization.IApplicationLanguageManager"/>.
            </summary>
        </member>
        <member name="P:Majid.Localization.ApplicationLanguageProvider.MajidSession">
            <summary>
            Reference to the session.
            </summary>
        </member>
        <member name="M:Majid.Localization.ApplicationLanguageProvider.#ctor(Majid.Localization.IApplicationLanguageManager)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Majid.Localization.ApplicationLanguageProvider.GetLanguages">
            <summary>
            Gets the languages for current tenant.
            </summary>
        </member>
        <member name="T:Majid.Localization.ApplicationLanguageText">
            <summary>
            Used to store a localization text.
            </summary>
        </member>
        <member name="P:Majid.Localization.ApplicationLanguageText.TenantId">
            <summary>
            TenantId of this entity. Can be null for host.
            </summary>
        </member>
        <member name="P:Majid.Localization.ApplicationLanguageText.LanguageName">
            <summary>
            Language name (culture name). Matches to <see cref="P:Majid.Localization.ApplicationLanguage.Name"/>.
            </summary>
        </member>
        <member name="P:Majid.Localization.ApplicationLanguageText.Source">
            <summary>
            Localization source name
            </summary>
        </member>
        <member name="P:Majid.Localization.ApplicationLanguageText.Key">
            <summary>
            Localization key
            </summary>
        </member>
        <member name="P:Majid.Localization.ApplicationLanguageText.Value">
            <summary>
            Localized value
            </summary>
        </member>
        <member name="T:Majid.Localization.ApplicationLanguageTextManager">
            <summary>
            Manages localization texts for host and tenants.
            </summary>
        </member>
        <member name="M:Majid.Localization.ApplicationLanguageTextManager.#ctor(Majid.Localization.ILocalizationManager,Majid.Domain.Repositories.IRepository{Majid.Localization.ApplicationLanguageText,System.Int64},Majid.Domain.Uow.IUnitOfWorkManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Localization.ApplicationLanguageTextManager"/> class.
            </summary>
        </member>
        <member name="M:Majid.Localization.ApplicationLanguageTextManager.GetStringOrNull(System.Nullable{System.Int32},System.String,System.Globalization.CultureInfo,System.String,System.Boolean)">
            <summary>
            Gets a localized string value.
            </summary>
            <param name="tenantId">TenantId or null for host</param>
            <param name="sourceName">Source name</param>
            <param name="culture">Culture</param>
            <param name="key">Localization key</param>
            <param name="tryDefaults">True: fallbacks to default languages if can not find in given culture</param>
        </member>
        <member name="M:Majid.Localization.ApplicationLanguageTextManager.UpdateStringAsync(System.Nullable{System.Int32},System.String,System.Globalization.CultureInfo,System.String,System.String)">
            <summary>
            Updates a localized string value.
            </summary>
            <param name="tenantId">TenantId or null for host</param>
            <param name="sourceName">Source name</param>
            <param name="culture">Culture</param>
            <param name="key">Localization key</param>
            <param name="value">New localized value.</param>
        </member>
        <member name="T:Majid.Localization.IApplicationLanguageManager">
            <summary>
            Manages host and tenant languages.
            </summary>
        </member>
        <member name="M:Majid.Localization.IApplicationLanguageManager.GetLanguagesAsync(System.Nullable{System.Int32})">
            <summary>
            Gets list of all languages available to given tenant (or null for host)
            </summary>
            <param name="tenantId">TenantId or null for host</param>
        </member>
        <member name="M:Majid.Localization.IApplicationLanguageManager.AddAsync(Majid.Localization.ApplicationLanguage)">
            <summary>
            Adds a new language.
            </summary>
            <param name="language">The language.</param>
        </member>
        <member name="M:Majid.Localization.IApplicationLanguageManager.RemoveAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes a language.
            </summary>
            <param name="tenantId">Tenant Id or null for host.</param>
            <param name="languageName">Name of the language.</param>
        </member>
        <member name="M:Majid.Localization.IApplicationLanguageManager.UpdateAsync(System.Nullable{System.Int32},Majid.Localization.ApplicationLanguage)">
            <summary>
            Updates a language.
            </summary>
            <param name="tenantId">Tenant Id or null for host.</param>
            <param name="language">The language to be updated</param>
        </member>
        <member name="M:Majid.Localization.IApplicationLanguageManager.GetDefaultLanguageOrNullAsync(System.Nullable{System.Int32})">
            <summary>
            Gets the default language or null for a tenant or the host.
            </summary>
            <param name="tenantId">Tenant Id of null for host</param>
        </member>
        <member name="M:Majid.Localization.IApplicationLanguageManager.SetDefaultLanguageAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Sets the default language for a tenant or the host.
            </summary>
            <param name="tenantId">Tenant Id of null for host</param>
            <param name="languageName">Name of the language.</param>
        </member>
        <member name="T:Majid.Localization.IApplicationLanguageTextManager">
            <summary>
            Manages localization texts for host and tenants.
            </summary>
        </member>
        <member name="M:Majid.Localization.IApplicationLanguageTextManager.GetStringOrNull(System.Nullable{System.Int32},System.String,System.Globalization.CultureInfo,System.String,System.Boolean)">
            <summary>
            Gets a localized string value.
            </summary>
            <param name="tenantId">TenantId or null for host</param>
            <param name="sourceName">Source name</param>
            <param name="culture">Culture</param>
            <param name="key">Localization key</param>
            <param name="tryDefaults">True: fallbacks to default languages if can not find in given culture</param>
        </member>
        <member name="M:Majid.Localization.IApplicationLanguageTextManager.UpdateStringAsync(System.Nullable{System.Int32},System.String,System.Globalization.CultureInfo,System.String,System.String)">
            <summary>
            Updates a localized string value.
            </summary>
            <param name="tenantId">TenantId or null for host</param>
            <param name="sourceName">Source name</param>
            <param name="culture">Culture</param>
            <param name="key">Localization key</param>
            <param name="value">New localized value.</param>
        </member>
        <member name="T:Majid.Localization.IMultiTenantLocalizationDictionary">
            <summary>
            Extends <see cref="T:Majid.Localization.Dictionaries.ILocalizationDictionary"/> to add tenant and database based localization.
            </summary>
        </member>
        <member name="M:Majid.Localization.IMultiTenantLocalizationDictionary.GetOrNull(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets a <see cref="T:Majid.Localization.LocalizedString"/>.
            </summary>
            <param name="tenantId">TenantId or null for host.</param>
            <param name="name">Localization key name.</param>
        </member>
        <member name="M:Majid.Localization.IMultiTenantLocalizationDictionary.GetAllStrings(System.Nullable{System.Int32})">
            <summary>
            Gets all <see cref="T:Majid.Localization.LocalizedString"/>s.
            </summary>
            <param name="tenantId">TenantId or null for host.</param>
        </member>
        <member name="T:Majid.Localization.IMultiTenantLocalizationSource">
            <summary>
            Extends <see cref="T:Majid.Localization.Sources.ILocalizationSource"/> to add tenant and database based localization.
            </summary>
        </member>
        <member name="M:Majid.Localization.IMultiTenantLocalizationSource.GetString(System.Nullable{System.Int32},System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets a <see cref="T:Majid.Localization.LocalizedString"/>.
            </summary>
            <param name="tenantId">TenantId or null for host.</param>
            <param name="name">Localization key name.</param>
            <param name="culture">Culture</param>
        </member>
        <member name="M:Majid.Localization.IMultiTenantLocalizationSource.GetStringOrNull(System.Nullable{System.Int32},System.String,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Gets a <see cref="T:Majid.Localization.LocalizedString"/>.
            </summary>
            <param name="tenantId">TenantId or null for host.</param>
            <param name="name">Localization key name.</param>
            <param name="culture">Culture</param>
            <param name="tryDefaults">True: fallbacks to default languages if can not find in given culture</param>
        </member>
        <member name="T:Majid.Localization.MultiTenantLocalizationDictionary">
            <summary>
            Implements <see cref="T:Majid.Localization.IMultiTenantLocalizationDictionary"/>.
            </summary>
        </member>
        <member name="M:Majid.Localization.MultiTenantLocalizationDictionary.#ctor(System.String,Majid.Localization.Dictionaries.ILocalizationDictionary,Majid.Domain.Repositories.IRepository{Majid.Localization.ApplicationLanguageText,System.Int64},Majid.Runtime.Caching.ICacheManager,Majid.Runtime.Session.IMajidSession,Majid.Domain.Uow.IUnitOfWorkManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Localization.MultiTenantLocalizationDictionary"/> class.
            </summary>
        </member>
        <member name="T:Majid.Localization.MultiTenantLocalizationDictionaryCacheCleaner">
            <summary>
            Clears related localization cache when a <see cref="T:Majid.Localization.ApplicationLanguageText"/> changes.
            </summary>
        </member>
        <member name="M:Majid.Localization.MultiTenantLocalizationDictionaryCacheCleaner.#ctor(Majid.Runtime.Caching.ICacheManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Localization.MultiTenantLocalizationDictionaryCacheCleaner"/> class.
            </summary>
        </member>
        <member name="T:Majid.Localization.MultiTenantLocalizationDictionaryCacheHelper">
            <summary>
            A helper to implement localization cache.
            </summary>
        </member>
        <member name="F:Majid.Localization.MultiTenantLocalizationDictionaryCacheHelper.CacheName">
            <summary>
            The cache name.
            </summary>
        </member>
        <member name="T:Majid.Localization.MultiTenantLocalizationDictionaryProvider">
            <summary>
            Extends <see cref="T:Majid.Localization.Dictionaries.ILocalizationDictionaryProvider"/> to add tenant and database based localization.
            </summary>
        </member>
        <member name="M:Majid.Localization.MultiTenantLocalizationDictionaryProvider.#ctor(Majid.Localization.Dictionaries.ILocalizationDictionaryProvider,Majid.Dependency.IIocManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Localization.MultiTenantLocalizationDictionaryProvider"/> class.
            </summary>
        </member>
        <member name="T:Majid.MultiTenancy.IDbPerTenantConnectionStringResolver">
            <summary>
            Extends <see cref="T:Majid.Domain.Uow.IConnectionStringResolver"/> to
            get connection string for given tenant.
            </summary>
        </member>
        <member name="M:Majid.MultiTenancy.IDbPerTenantConnectionStringResolver.GetNameOrConnectionString(Majid.MultiTenancy.DbPerTenantConnectionStringResolveArgs)">
            <summary>
            Gets the connection string for given args.
            </summary>
        </member>
        <member name="T:Majid.MultiTenancy.MajidTenant`1">
            <summary>
            Represents a Tenant of the application.
            </summary>
        </member>
        <member name="P:Majid.MultiTenancy.MajidTenant`1.Edition">
            <summary>
            Current <see cref="P:Majid.MultiTenancy.MajidTenant`1.Edition"/> of the Tenant.
            </summary>
        </member>
        <member name="P:Majid.MultiTenancy.MajidTenant`1.CreatorUser">
            <summary>
            Reference to the creator user of this entity.
            </summary>
        </member>
        <member name="P:Majid.MultiTenancy.MajidTenant`1.LastModifierUser">
            <summary>
            Reference to the last modifier user of this entity.
            </summary>
        </member>
        <member name="P:Majid.MultiTenancy.MajidTenant`1.DeleterUser">
            <summary>
            Reference to the deleter user of this entity.
            </summary>
        </member>
        <member name="M:Majid.MultiTenancy.MajidTenant`1.#ctor">
            <summary>
            Creates a new tenant.
            </summary>
        </member>
        <member name="M:Majid.MultiTenancy.MajidTenant`1.#ctor(System.String,System.String)">
            <summary>
            Creates a new tenant.
            </summary>
            <param name="tenancyName">UNIQUE name of this Tenant</param>
            <param name="name">Display name of the Tenant</param>
        </member>
        <member name="T:Majid.MultiTenancy.MajidTenantBase">
            <summary>
            Base class for tenants.
            </summary>
        </member>
        <member name="F:Majid.MultiTenancy.MajidTenantBase.MaxTenancyNameLength">
            <summary>
            Max length of the <see cref="P:Majid.MultiTenancy.MajidTenantBase.TenancyName"/> property.
            </summary>
        </member>
        <member name="F:Majid.MultiTenancy.MajidTenantBase.MaxConnectionStringLength">
            <summary>
            Max length of the <see cref="P:Majid.MultiTenancy.MajidTenantBase.ConnectionString"/> property.
            </summary>
        </member>
        <member name="F:Majid.MultiTenancy.MajidTenantBase.DefaultTenantName">
            <summary>
            "Default".
            </summary>
        </member>
        <member name="F:Majid.MultiTenancy.MajidTenantBase.TenancyNameRegex">
            <summary>
            "^[a-zA-Z][a-zA-Z0-9_-]{1,}$".
            </summary>
        </member>
        <member name="F:Majid.MultiTenancy.MajidTenantBase.MaxNameLength">
            <summary>
            Max length of the <see cref="P:Majid.MultiTenancy.MajidTenantBase.Name"/> property.
            </summary>
        </member>
        <member name="P:Majid.MultiTenancy.MajidTenantBase.TenancyName">
            <summary>
            Tenancy name. This property is the UNIQUE name of this Tenant.
            It can be used as subdomain name in a web application.
            </summary>
        </member>
        <member name="P:Majid.MultiTenancy.MajidTenantBase.Name">
            <summary>
            Display name of the Tenant.
            </summary>
        </member>
        <member name="P:Majid.MultiTenancy.MajidTenantBase.ConnectionString">
            <summary>
            ENCRYPTED connection string of the tenant database.
            Can be null if this tenant is stored in host database.
            Use <see cref="T:Majid.Runtime.Security.SimpleStringCipher"/> to encrypt/decrypt this.
            </summary>
        </member>
        <member name="P:Majid.MultiTenancy.MajidTenantBase.IsActive">
            <summary>
            Is this tenant active?
            If as tenant is not active, no user of this tenant can use the application.
            </summary>
        </member>
        <member name="T:Majid.MultiTenancy.MajidTenantManager`2">
            <summary>
            Tenant manager.
            Implements domain logic for <see cref="T:Majid.MultiTenancy.MajidTenant`1"/>.
            </summary>
            <typeparam name="TTenant">Type of the application Tenant</typeparam>
            <typeparam name="TUser">Type of the application User</typeparam>
        </member>
        <member name="M:Majid.MultiTenancy.MajidTenantManager`2.ResetAllFeaturesAsync(System.Int32)">
            <summary>
            Resets all custom feature settings for a tenant.
            Tenant will have features according to it's edition.
            </summary>
            <param name="tenantId">Tenant Id</param>
        </member>
        <member name="T:Majid.MultiTenancy.TenantFeatureCacheItem">
            <summary>
            Used to store features of a Tenant in the cache.
            </summary>
        </member>
        <member name="F:Majid.MultiTenancy.TenantFeatureCacheItem.CacheStoreName">
            <summary>
            The cache store name.
            </summary>
        </member>
        <member name="P:Majid.MultiTenancy.TenantFeatureCacheItem.EditionId">
            <summary>
            Edition of the tenant.
            </summary>
        </member>
        <member name="P:Majid.MultiTenancy.TenantFeatureCacheItem.FeatureValues">
            <summary>
            Feature values.
            </summary>
        </member>
        <member name="M:Majid.MultiTenancy.TenantFeatureCacheItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.MultiTenancy.TenantFeatureCacheItem"/> class.
            </summary>
        </member>
        <member name="T:Majid.MultiTenancy.TenantFeatureCacheItemInvalidator">
            <summary>
            This class handles related events and invalidated tenant feature cache items if needed.
            </summary>
        </member>
        <member name="M:Majid.MultiTenancy.TenantFeatureCacheItemInvalidator.#ctor(Majid.Runtime.Caching.ICacheManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.MultiTenancy.TenantFeatureCacheItemInvalidator"/> class.
            </summary>
            <param name="cacheManager">The cache manager.</param>
        </member>
        <member name="T:Majid.MultiTenancy.TenantFeatureSetting">
            <summary>
            Feature setting for a Tenant (<see cref="T:Majid.MultiTenancy.MajidTenant`1"/>).
            </summary>
        </member>
        <member name="M:Majid.MultiTenancy.TenantFeatureSetting.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.MultiTenancy.TenantFeatureSetting"/> class.
            </summary>
        </member>
        <member name="M:Majid.MultiTenancy.TenantFeatureSetting.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.MultiTenancy.TenantFeatureSetting"/> class.
            </summary>
            <param name="tenantId">The tenant identifier.</param>
            <param name="name">Feature name.</param>
            <param name="value">Feature value.</param>
        </member>
        <member name="T:Majid.Notifications.NotificationStore">
            <summary>
            Implements <see cref="T:Majid.Notifications.INotificationStore"/> using repositories.
            </summary>
        </member>
        <member name="M:Majid.Notifications.NotificationStore.#ctor(Majid.Domain.Repositories.IRepository{Majid.Notifications.NotificationInfo,System.Guid},Majid.Domain.Repositories.IRepository{Majid.Notifications.TenantNotificationInfo,System.Guid},Majid.Domain.Repositories.IRepository{Majid.Notifications.UserNotificationInfo,System.Guid},Majid.Domain.Repositories.IRepository{Majid.Notifications.NotificationSubscriptionInfo,System.Guid},Majid.Domain.Uow.IUnitOfWorkManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Notifications.NotificationStore"/> class.
            </summary>
        </member>
        <member name="T:Majid.Organizations.IMayHaveOrganizationUnit">
            <summary>
            This interface is implemented entities those may have an <see cref="T:Majid.Organizations.OrganizationUnit"/>.
            </summary>
        </member>
        <member name="P:Majid.Organizations.IMayHaveOrganizationUnit.OrganizationUnitId">
            <summary>
            <see cref="T:Majid.Organizations.OrganizationUnit"/>'s Id which this entity belongs to.
            Can be null if this entity is not related to any <see cref="T:Majid.Organizations.OrganizationUnit"/>.
            </summary>
        </member>
        <member name="T:Majid.Organizations.IMustHaveOrganizationUnit">
            <summary>
            This interface is implemented entities those must have an <see cref="T:Majid.Organizations.OrganizationUnit"/>.
            </summary>
        </member>
        <member name="P:Majid.Organizations.IMustHaveOrganizationUnit.OrganizationUnitId">
            <summary>
            <see cref="T:Majid.Organizations.OrganizationUnit"/>'s Id which this entity belongs to.
            </summary>
        </member>
        <member name="T:Majid.Organizations.IOrganizationUnitSettings">
            <summary>
            Used to get settings related to OrganizationUnits.
            </summary>
        </member>
        <member name="P:Majid.Organizations.IOrganizationUnitSettings.MaxUserMembershipCount">
            <summary>
            GetsMaximum allowed organization unit membership count for a user.
            Returns value for current tenant.
            </summary>
        </member>
        <member name="M:Majid.Organizations.IOrganizationUnitSettings.GetMaxUserMembershipCountAsync(System.Nullable{System.Int32})">
            <summary>
            Gets Maximum allowed organization unit membership count for a user.
            Returns value for given tenant.
            </summary>
            <param name="tenantId">The tenant Id or null for the host.</param>
        </member>
        <member name="M:Majid.Organizations.IOrganizationUnitSettings.SetMaxUserMembershipCountAsync(System.Nullable{System.Int32},System.Int32)">
            <summary>
            Sets Maximum allowed organization unit membership count for a user.
            </summary>
            <param name="tenantId">The tenant Id or null for the host.</param>
            <param name="value">Setting value.</param>
            <returns></returns>
        </member>
        <member name="T:Majid.Organizations.OrganizationUnit">
            <summary>
            Represents an organization unit (OU).
            </summary>
        </member>
        <member name="F:Majid.Organizations.OrganizationUnit.MaxDisplayNameLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Organizations.OrganizationUnit.DisplayName"/> property.
            </summary>
        </member>
        <member name="F:Majid.Organizations.OrganizationUnit.MaxDepth">
            <summary>
            Maximum depth of an UO hierarchy.
            </summary>
        </member>
        <member name="F:Majid.Organizations.OrganizationUnit.CodeUnitLength">
            <summary>
            Length of a code unit between dots.
            </summary>
        </member>
        <member name="F:Majid.Organizations.OrganizationUnit.MaxCodeLength">
            <summary>
            Maximum length of the <see cref="P:Majid.Organizations.OrganizationUnit.Code"/> property.
            </summary>
        </member>
        <member name="P:Majid.Organizations.OrganizationUnit.TenantId">
            <summary>
            TenantId of this entity.
            </summary>
        </member>
        <member name="P:Majid.Organizations.OrganizationUnit.Parent">
            <summary>
            Parent <see cref="T:Majid.Organizations.OrganizationUnit"/>.
            Null, if this OU is root.
            </summary>
        </member>
        <member name="P:Majid.Organizations.OrganizationUnit.ParentId">
            <summary>
            Parent <see cref="T:Majid.Organizations.OrganizationUnit"/> Id.
            Null, if this OU is root.
            </summary>
        </member>
        <member name="P:Majid.Organizations.OrganizationUnit.Code">
            <summary>
            Hierarchical Code of this organization unit.
            Example: "00001.00042.00005".
            This is a unique code for a Tenant.
            It's changeable if OU hierarch is changed.
            </summary>
        </member>
        <member name="P:Majid.Organizations.OrganizationUnit.DisplayName">
            <summary>
            Display name of this role.
            </summary>
        </member>
        <member name="P:Majid.Organizations.OrganizationUnit.Children">
            <summary>
            Children of this OU.
            </summary>
        </member>
        <member name="M:Majid.Organizations.OrganizationUnit.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Organizations.OrganizationUnit"/> class.
            </summary>
        </member>
        <member name="M:Majid.Organizations.OrganizationUnit.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Organizations.OrganizationUnit"/> class.
            </summary>
            <param name="tenantId">Tenant's Id or null for host.</param>
            <param name="displayName">Display name.</param>
            <param name="parentId">Parent's Id or null if OU is a root.</param>
        </member>
        <member name="M:Majid.Organizations.OrganizationUnit.CreateCode(System.Int32[])">
            <summary>
            Creates code for given numbers.
            Example: if numbers are 4,2 then returns "00004.00002";
            </summary>
            <param name="numbers">Numbers</param>
        </member>
        <member name="M:Majid.Organizations.OrganizationUnit.AppendCode(System.String,System.String)">
            <summary>
            Appends a child code to a parent code. 
            Example: if parentCode = "00001", childCode = "00042" then returns "00001.00042".
            </summary>
            <param name="parentCode">Parent code. Can be null or empty if parent is a root.</param>
            <param name="childCode">Child code.</param>
        </member>
        <member name="M:Majid.Organizations.OrganizationUnit.GetRelativeCode(System.String,System.String)">
            <summary>
            Gets relative code to the parent.
            Example: if code = "00019.00055.00001" and parentCode = "00019" then returns "00055.00001".
            </summary>
            <param name="code">The code.</param>
            <param name="parentCode">The parent code.</param>
        </member>
        <member name="M:Majid.Organizations.OrganizationUnit.CalculateNextCode(System.String)">
            <summary>
            Calculates next code for given code.
            Example: if code = "00019.00055.00001" returns "00019.00055.00002".
            </summary>
            <param name="code">The code.</param>
        </member>
        <member name="M:Majid.Organizations.OrganizationUnit.GetLastUnitCode(System.String)">
            <summary>
            Gets the last unit code.
            Example: if code = "00019.00055.00001" returns "00001".
            </summary>
            <param name="code">The code.</param>
        </member>
        <member name="M:Majid.Organizations.OrganizationUnit.GetParentCode(System.String)">
            <summary>
            Gets parent code.
            Example: if code = "00019.00055.00001" returns "00019.00055".
            </summary>
            <param name="code">The code.</param>
        </member>
        <member name="T:Majid.Organizations.OrganizationUnitManager">
            <summary>
            Performs domain logic for Organization Units.
            </summary>
        </member>
        <member name="T:Majid.Organizations.OrganizationUnitSettings">
            <summary>
            Implements <see cref="T:Majid.Organizations.IOrganizationUnitSettings"/> to get settings from <see cref="T:Majid.Configuration.ISettingManager"/>.
            </summary>
        </member>
        <member name="P:Majid.Organizations.OrganizationUnitSettings.MaxUserMembershipCount">
            <summary>
            Maximum allowed organization unit membership count for a user.
            Returns value for current tenant.
            </summary>
        </member>
        <member name="M:Majid.Organizations.OrganizationUnitSettings.#ctor(Majid.Configuration.ISettingManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Majid.Organizations.OrganizationUnitSettings"/> class.
            </summary>
        </member>
        <member name="M:Majid.Organizations.OrganizationUnitSettings.GetMaxUserMembershipCountAsync(System.Nullable{System.Int32})">
            <summary>
            Maximum allowed organization unit membership count for a user.
            Returns value for given tenant.
            </summary>
        </member>
        <member name="T:Majid.Zero.Configuration.ILanguageManagementConfig">
            <summary>
            Used to configure language management.
            </summary>
        </member>
        <member name="M:Majid.Zero.Configuration.ILanguageManagementConfig.EnableDbLocalization">
            <summary>
            Enables the database localization.
            Replaces all <see cref="T:Majid.Localization.Dictionaries.IDictionaryBasedLocalizationSource"/> localization sources
            with database based localization source.
            </summary>
        </member>
        <member name="T:Majid.Zero.Configuration.IMajidZeroConfig">
            <summary>
            Configuration options for zero module.
            </summary>
        </member>
        <member name="P:Majid.Zero.Configuration.IMajidZeroConfig.RoleManagement">
            <summary>
            Gets role management config.
            </summary>
        </member>
        <member name="P:Majid.Zero.Configuration.IMajidZeroConfig.UserManagement">
            <summary>
            Gets user management config.
            </summary>
        </member>
        <member name="P:Majid.Zero.Configuration.IMajidZeroConfig.LanguageManagement">
            <summary>
            Gets language management config.
            </summary>
        </member>
        <member name="P:Majid.Zero.Configuration.IMajidZeroConfig.EntityTypes">
            <summary>
            Gets entity type config.
            </summary>
        </member>
        <member name="P:Majid.Zero.Configuration.IMajidZeroEntityTypes.User">
            <summary>
            User type of the application.
            </summary>
        </member>
        <member name="P:Majid.Zero.Configuration.IMajidZeroEntityTypes.Role">
            <summary>
            Role type of the application.
            </summary>
        </member>
        <member name="P:Majid.Zero.Configuration.IMajidZeroEntityTypes.Tenant">
            <summary>
            Tenant type of the application.
            </summary>
        </member>
        <member name="T:Majid.Zero.Configuration.IUserManagementConfig">
            <summary>
            User management configuration.
            </summary>
        </member>
        <member name="F:Majid.Zero.Configuration.MajidZeroSettingNames.UserManagement.IsEmailConfirmationRequiredForLogin">
            <summary>
            "Majid.Zero.UserManagement.IsEmailConfirmationRequiredForLogin".
            </summary>
        </member>
        <member name="F:Majid.Zero.Configuration.MajidZeroSettingNames.UserManagement.UserLockOut.IsEnabled">
            <summary>
            "Majid.Zero.UserManagement.UserLockOut.IsEnabled".
            </summary>
        </member>
        <member name="F:Majid.Zero.Configuration.MajidZeroSettingNames.UserManagement.UserLockOut.MaxFailedAccessAttemptsBeforeLockout">
            <summary>
            "Majid.Zero.UserManagement.UserLockOut.MaxFailedAccessAttemptsBeforeLockout".
            </summary>
        </member>
        <member name="F:Majid.Zero.Configuration.MajidZeroSettingNames.UserManagement.UserLockOut.DefaultAccountLockoutSeconds">
            <summary>
            "Majid.Zero.UserManagement.UserLockOut.DefaultAccountLockoutSeconds".
            </summary>
        </member>
        <member name="F:Majid.Zero.Configuration.MajidZeroSettingNames.UserManagement.TwoFactorLogin.IsEnabled">
            <summary>
            "Majid.Zero.UserManagement.TwoFactorLogin.IsEnabled".
            </summary>
        </member>
        <member name="F:Majid.Zero.Configuration.MajidZeroSettingNames.UserManagement.TwoFactorLogin.IsEmailProviderEnabled">
            <summary>
            "Majid.Zero.UserManagement.TwoFactorLogin.IsEmailProviderEnabled".
            </summary>
        </member>
        <member name="F:Majid.Zero.Configuration.MajidZeroSettingNames.UserManagement.TwoFactorLogin.IsSmsProviderEnabled">
            <summary>
            "Majid.Zero.UserManagement.TwoFactorLogin.IsSmsProviderEnabled".
            </summary>
        </member>
        <member name="F:Majid.Zero.Configuration.MajidZeroSettingNames.UserManagement.TwoFactorLogin.IsRememberBrowserEnabled">
            <summary>
            "Majid.Zero.UserManagement.TwoFactorLogin.IsRememberBrowserEnabled".
            </summary>
        </member>
        <member name="F:Majid.Zero.Configuration.MajidZeroSettingNames.UserManagement.PasswordComplexity.RequiredLength">
            <summary>
            "Majid.Zero.UserManagement.PasswordComplexity.RequiredLength"
            </summary>
        </member>
        <member name="F:Majid.Zero.Configuration.MajidZeroSettingNames.UserManagement.PasswordComplexity.RequireNonAlphanumeric">
            <summary>
            "Majid.Zero.UserManagement.PasswordComplexity.RequireNonAlphanumeric"
            </summary>
        </member>
        <member name="F:Majid.Zero.Configuration.MajidZeroSettingNames.UserManagement.PasswordComplexity.RequireLowercase">
            <summary>
            "Majid.Zero.UserManagement.PasswordComplexity.RequireLowercase"
            </summary>
        </member>
        <member name="F:Majid.Zero.Configuration.MajidZeroSettingNames.UserManagement.PasswordComplexity.RequireUppercase">
            <summary>
            "Majid.Zero.UserManagement.PasswordComplexity.RequireUppercase"
            </summary>
        </member>
        <member name="F:Majid.Zero.Configuration.MajidZeroSettingNames.UserManagement.PasswordComplexity.RequireDigit">
            <summary>
            "Majid.Zero.UserManagement.PasswordComplexity.RequireDigit"
            </summary>
        </member>
        <member name="F:Majid.Zero.Configuration.MajidZeroSettingNames.OrganizationUnits.MaxUserMembershipCount">
            <summary>
            "Majid.Zero.OrganizationUnits.MaxUserMembershipCount".
            </summary>
        </member>
        <member name="T:Majid.Zero.Configuration.ModuleZeroConfigurationExtensions">
            <summary>
            Extension methods for module zero configurations.
            </summary>
        </member>
        <member name="M:Majid.Zero.Configuration.ModuleZeroConfigurationExtensions.Zero(Majid.Configuration.Startup.IModuleConfigurations)">
            <summary>
            Used to configure module zero.
            </summary>
            <param name="moduleConfigurations"></param>
            <returns></returns>
        </member>
        <member name="T:Majid.Zero.MajidZeroCommonModule">
            <summary>
            MAJID zero core module.
            </summary>
        </member>
        <member name="F:Majid.Zero.MajidZeroConsts.LocalizationSourceName">
            <summary>
            "MajidZero"
            </summary>
        </member>
    </members>
</doc>
